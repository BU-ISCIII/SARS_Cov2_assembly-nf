
process{
	executor = 'sge'
	//module = 'fastqc/fastQC-0.11.8:unicycler/unicycler-0.4.6:prokka/prokka-1.12:quast/quast-4.1'
	queue = 'all.q'
	conda = '/processing_Data/bioinformatics/pipelines/miniconda3/envs/virus_illumina'


	withLabel:'small'{
 			penv='openmp'
			cpus = { check_max( 2, 'cpus' ) }
			memory = { check_max( 1.GB * task.attempt, 'memory' ) }
			time = { check_max( 1.h * task.attempt, 'time' ) }
			}
	withName:'mapping_host'{
			cpus = { check_max( 4, 'cpus' ) }
			memory = { check_max( 10.GB * task.attempt, 'memory' ) }
			time = { check_max( 2.h * task.attempt, 'time' ) }
 			penv='openmp'
			}
	withName:'spades_assembly'{
			errorStrategy={ task.exitStatus in [143,137,104,134,138,139] ? 'retry' : 'finish'; task.exitStatus == 1 ? 'ignore' : 'finish' }
			cpus = { check_max( 10, 'cpus' ) }
			memory = { check_max( 12.GB, 'memory' ) }
			time = { check_max( 4.h * task.attempt, 'time' ) }
 			penv='openmp'
			}
	withName:'metaspades_assembly'{
			errorStrategy={ task.exitStatus in [143,137,104,134,138,139] ? 'retry' : 'finish'; task.exitStatus == 1 ? 'ignore' : 'finish' }
			cpus = { check_max( 10, 'cpus' ) }
			memory = { check_max( 12.GB, 'memory' ) }
			time = { check_max( 4.h * task.attempt, 'time' ) }
 			penv='openmp'
			}
	withName:'unicycler_assembly'{
			errorStrategy = { task.exitStatus in [143,137,104,134,138,139] ? 'retry' : 'finish'; task.exitStatus == 1 ? 'ignore' : 'finish' }
			cpus = { check_max( 10, 'cpus' ) }
			memory = { check_max( 12.GB, 'memory' ) }
			time = { check_max( 4.h * task.attempt, 'time' ) }
 			penv='openmp'
			}
}
